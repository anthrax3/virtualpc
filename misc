v - variable size

0 - v - v - absolute: 100h - constant
1 - 4 - dword - &(*absolute): [100h] - address
2 - 4 - dword - &(pc + offset:dword): (-100h) - address
3 - 1 - byte - &register: ra - register
4 - 1 - byte - &(*register): [ra] - address
5 - 5 - byte + dword - &(*register + offset:dword): [ra + 4] - address
6 - 4 - byte + byte + word - &(*register + *register *factor:word): [ra + rb * 2] - address
7 - 0 - no operand - none

instruction =
size:2, addressing: 6, width:2 | instruction:size, address...

SIZE: How many bytes instruction takes (1/2/4)
LENGTH: How many bytes whole instruction takes (with operands)
WIDTH: How much data the instruction processes (1/2/4)


size:
0 - byte
1 - word
2 - reserved
3 - addressing is the instruction!

width:
0 - byte
1 - word
2 - dword
3 - reserved

Memory:

Memory before 0x100000 is reserved for system

0x100000 - 0x200000 is available for programs 